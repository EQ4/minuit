<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AUTHOR</key>
	<string></string>
	<key>CONTROLS</key>
	<array>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>0</integer>
			<key>CAPTION</key>
			<string>Text Caption</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>5.3677112143719965e-301</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>4.25785004177556e-314</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>231.0703125</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>5.3677112143719965e-301</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>4.25785004177556e-314</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>5.3677112143719965e-301</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>4.25785004177556e-314</real>
			<key>NAME</key>
			<string>debug</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string></string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>TEXTCAPTIONB</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>1</integer>
			<key>WIDTH</key>
			<real>357</real>
			<key>X</key>
			<real>16</real>
			<key>Y</key>
			<real>16</real>
		</dict>
	</array>
	<key>DESCRIPTION</key>
	<string></string>
	<key>MODULE_AUTOFLUSH</key>
	<false/>
	<key>MODULE_CONTROL_ID_COUNTER</key>
	<integer>1</integer>
	<key>MODULE_LAYER_CONTEXTUAL</key>
	<false/>
	<key>MODULE_RESETDIRECTKEY_PAUSED</key>
	<true/>
	<key>MODULE_TITLEBAR_B</key>
	<real>0.20392157137393951</real>
	<key>MODULE_TITLEBAR_G</key>
	<real>0.13333334028720856</real>
	<key>MODULE_TITLEBAR_R</key>
	<real>0.08235294371843338</real>
	<key>PREFERENCES</key>
	<dict>
		<key>SCRIPT_STATE</key>
		<string>PLAYING</string>
		<key>WINDOW_HIDDEN</key>
		<false/>
		<key>WINDOW_MINIMIZED</key>
		<false/>
		<key>WINDOW_X</key>
		<real>1298</real>
		<key>WINDOW_Y</key>
		<real>535</real>
	</dict>
	<key>SCRIPT_CLEANUP</key>
	<string></string>
	<key>SCRIPT_DESERIALIZE</key>
	<string></string>
	<key>SCRIPT_EVENT</key>
	<string></string>
	<key>SCRIPT_INIT</key>
	<string>from pprint import pprint
import copy
auto_priority_index = 0
m_db = {}
m_master = {}		
m_temp = {}
for keyword in modul8.getValue ('info_keywords',0) :
	# m_keyword is the minuit keyword :  slash replaces underscore
	m_keyword = copy.deepcopy(keyword)
	#List of master controls
	if keyword.startswith ('ctrl_master') :			
		valueKeyw = modul8.getValue (keyword,0)
		keyword = keyword.split('_')[2:]
		auto_priority_index = auto_priority_index + 1
		keyword = '/'.join(keyword)
		m_master[keyword] = dict([('value' , valueKeyw),('priority',auto_priority_index)])
		m_db.update(dict([('master',m_master)]))
		#print  'MASTER_NAMESPACE', keyword , valueKeyw, auto_priority_index
	elif keyword.startswith ('ctrl_layer') :
		#print '#######',keyword
		if keyword == 'ctrl_layerStack_focusPosition' or keyword == 'ctrl_layerStack_positionChange' or keyword == 'ctrl_layer_focused' or keyword == 'id' or keyword == 'ctrl_layer_stackPosition' or keyword == 'ctrl_layerStack_duplicate' or keyword == 'ctrl_layer_activated' or keyword == 'id':
			keyword = None
		else:
			m_keyword = m_keyword.split('_')[2:]
			m_keyword =  '/'.join(m_keyword)		
			for layer_index in range(1,11): 
				layer_dict_name = 'layer.'+str(layer_index)
				if m_keyword:
					if m_keyword != 'id':
						auto_priority_index = auto_priority_index + 1
						valueKeyw = modul8.getValue (keyword,layer_index)
						#dict(layer_dict_name).update(dict(layer_dict_name_temp))
						#m_temp = dict([(layer_dict_name ,dict([(m_keyword , dict([('value' , valueKeyw),('priority',auto_priority_index)]))]))])
						m_temp.update(dict([(m_keyword , dict([('value' , valueKeyw),('priority',auto_priority_index)]))]))
						m_db.update(dict([(layer_dict_name , dict(m_temp) ) ] ) )	
## PROBLEME, CETTE LIGNE EFFACE LE PARAMETRE PRECEDENT ##

					
		
#						print '###APRES###',m_temp,m_db	
			
pprint(m_db)
				
					#m_db['master:' + keyword] = dict([('value' , valueKeyw),('priority',auto_priority_index)])
					#print '######' , '/layer.' + str(layer_index) + m_keyword , valueKeyw , auto_priority_index
# print master dictionary
#print m_db
#print m_temp
#for keys in m_db.keys():
#	print m_db.items()
	
#print m_temp
# print layer dictionary
#print m_layer_1








#def minuit_get(node):
#	if node == '/':
#		minuit_answer = '/' + ' ' + 'Application' + ' ' + 'nodes={master, layer , ui}'
#		print minuit_answer
#		return minuit_answer
#	elif '/master/' in node:
#		minuit_answer = '/master' + ' ' + 'Container' + ' ' + 'nodes={' +  ' '.join(ctrlKeywordMasterList) + '}' + ' ' + 'attributes={ priority }'
#		print  minuit_answer
#		return minuit_answer
#	elif '/layer.' in node:
#		minuit_answer = '/' + ' ' + 'Container' + ' ' + 'nodes={master, layer , ui}'
#		print minuit_answer
#		return minuit_answer
#	elif ':' in node:
#		minuit_answer = '/' + ' ' + 'Container' + ' ' + 'nodes={master, layer , ui}'
#		print minuit_answer
#		return minuit_answer
#	else:
#		print 'NON'
#


#minuit_get('/')
#minuit_get('/master')
#minuit_get('/master/still')
#minuit_get('/layer.1')
#minuit_get('/layer.10')</string>
	<key>SCRIPT_KEYWORDEVENT</key>
	<string></string>
	<key>SCRIPT_MESSAGE</key>
	<string></string>
	<key>SCRIPT_PAUSEEVENT</key>
	<string></string>
	<key>SCRIPT_PERIODICAL</key>
	<string></string>
	<key>SCRIPT_SERIALIZE</key>
	<string></string>
	<key>SHORT_DESCRIPTION</key>
	<string></string>
	<key>VERSION</key>
	<string></string>
	<key>WINDOW_HEIGHT</key>
	<real>280</real>
	<key>WINDOW_WIDTH</key>
	<real>400</real>
</dict>
</plist>
